{"ast":null,"code":"import Element from \"./Element\";\n\nclass MultiSelect2 {\n  constructor(element, config) {\n    this._config = { ...config\n    };\n    this._state = {\n      opened: false\n    };\n    this._icons = [];\n    this.currentFocus = -1;\n    this._boundHandleClick = this._handleClick.bind(this);\n    this._boundUnselectOption = this._unselectOption.bind(this);\n    this._boundSortOptions = this._sortOptions.bind(this);\n    this._boundArrows = this._arrows.bind(this);\n    this._body = new Element(document.body);\n\n    this._create(element);\n\n    this._setValue();\n  }\n\n  _create(_element) {\n    const element = typeof _element === \"string\" ? document.querySelector(_element) : _element;\n    this._parent = new Element(element);\n    this._select = new Element(\"div\", {\n      class: \"multi-select__select\"\n    });\n    this._selected_value = new Element(\"span\", {\n      class: \"multi-select__label\"\n    });\n    this._optionsDiv = new Element(\"div\", {\n      class: \"multi-select__options\"\n    });\n\n    this._select.append(this._selected_value.get());\n\n    this._select.append(this._optionsDiv.get());\n\n    this._parent.append(this._select.get());\n\n    this._options = this._generateOptionsOfSelect();\n\n    this._select.addEventListener(\"click\", this._boundHandleClick);\n\n    if (this._config.multiple) {\n      this._select.addClass(\"multi-select__select--multiple\");\n    }\n  }\n\n  _generateOptionsOfSelect() {\n    if (this._config.autocomplete) {\n      this._autocomplete = new Element(\"input\", {\n        class: \"multi-select__autocomplete\",\n        type: \"text\"\n      }); // Add Listeners to input field of autocomplete\n\n      this._autocomplete.addEventListener(\"input\", this._boundSortOptions);\n\n      this._autocomplete.addEventListener(\"keydown\", this._boundArrows);\n\n      this._optionsDiv.append(this._autocomplete.get());\n    }\n\n    return this._config.options.map(_option => {\n      const option = new Element(\"div\", {\n        class: \"multi-select__option\",\n        value: _option.value,\n        textContent: _option.label,\n        disabled: _option.disabled,\n        info: _option.info,\n        action: _option.action\n      });\n\n      this._optionsDiv.append(option.get());\n\n      return option;\n    });\n  }\n\n  _handleClick(event) {\n    // reset dropdown\n    this._firstActive();\n\n    event.stopPropagation();\n\n    this._closeAllLists();\n\n    if (event.target.className === \"multi-select__autocomplete\") {\n      return;\n    }\n\n    if (this._state.opened) {\n      const option = this._options.find(_option => _option.get() === event.target);\n\n      if (option) {\n        this._setValue(option.get().getAttribute(\"data-value\"), true);\n      }\n\n      this._select.removeClass(\"multi-select__select--opened\");\n\n      this._body.removeEventListener(\"click\", this._boundHandleClick);\n\n      this._select.addEventListener(\"click\", this._boundHandleClick);\n\n      this._state.opened = false;\n      return;\n    } //Check for fontawsome icon, incase of pro fontawsome it will check svg otherwise it will check i tag or class like fa fas-something\n\n\n    if ('fa ' + event.target.parentElement.classList[1] === this._config.icon) {\n      this._unselectOption(event.target.parentElement.getAttribute('data-value'));\n\n      return;\n    } else if (event.target.tagName === 'I') {\n      this._unselectOption(event.target.getAttribute('data-value'));\n\n      return;\n    } else if (event.target.tagName === 'svg') {\n      this._unselectOption(event.target.getAttribute('data-value'));\n\n      return;\n    }\n\n    this._select.addClass(\"multi-select__select--opened\");\n\n    this._body.addEventListener(\"click\", this._boundHandleClick);\n\n    this._select.removeEventListener(\"click\", this._boundHandleClick);\n\n    this._state.opened = true;\n\n    if (this._autocomplete) {\n      this._autocomplete.focus();\n    }\n  }\n\n  _setValue(value, manual, unselected) {\n    if (value && !unselected) {\n      this._config.value = this._config.multiple ? this._config.value.concat(value) : value;\n    }\n\n    if (value && unselected) {\n      this._config.value = value;\n    }\n\n    this._options.forEach(_option => {\n      _option.removeClass(\"multi-select__option--selected\");\n    });\n\n    if (this._config.multiple) {\n      const options = this._config.value.map(_value => {\n        const option = this._config.options.find(_option => _option.value === _value);\n\n        const optionNode = this._options.find(_option => _option.get().getAttribute(\"data-value\") === option.value.toString());\n\n        optionNode.addClass(\"multi-select__option--selected\");\n        return option;\n      });\n\n      this._selectOptions(options, manual);\n\n      return;\n    }\n\n    if (!this._config.options.length) {\n      return;\n    }\n\n    const option = this._config.value ? this._config.options.find(_option => _option.value.toString() === this._config.value) : '';\n\n    if (option !== '') {\n      const optionNode = this._options.find(_option => _option.get().getAttribute(\"data-value\") === option.value.toString());\n\n      optionNode.addClass(\"multi-select__option--selected\");\n\n      this._selectOption(option, manual);\n    }\n  }\n\n  _selectOption(option, manual) {\n    this._selectedOption = option;\n\n    this._selected_value.setText(option.label);\n\n    if (this._config.onChange && manual) {\n      this._config.onChange(option.value);\n    }\n  }\n\n  _selectOptions(options, manual) {\n    this._selected_value.setText(\"\");\n\n    this._icons = options.map(_option => {\n      const selectedLabel = new Element(\"span\", {\n        class: \"multi-select__selected-label\",\n        textContent: _option.label\n      });\n      const icon = new Element(\"i\", {\n        class: this._config.icon,\n        value: _option.value\n      });\n      selectedLabel.append(icon.get());\n\n      this._selected_value.append(selectedLabel.get());\n\n      return icon.get();\n    });\n\n    if (manual) {\n      // eslint-disable-next-line no-magic-numbers\n      this._optionsDiv.setTop(Number(this._select.getHeight().split(\"px\")[0]) + 5);\n    }\n\n    if (this._config.onChange && manual) {\n      this._config.onChange(this._config.value);\n    }\n  }\n\n  _unselectOption(event) {\n    const newValue = [...this._config.value];\n    let index;\n\n    if (!event.target) {\n      index = newValue.indexOf(event);\n    } else {\n      index = newValue.indexOf(event.target.getAttribute(\"data-value\"));\n    } // eslint-disable-next-line no-magic-numbers\n\n\n    if (index !== -1) {\n      newValue.splice(index, 1);\n    }\n\n    this._setValue(newValue, true, true);\n  }\n\n  _sortOptions(event) {\n    this._options.forEach(_option => {\n      if (!_option.get().textContent.toLowerCase().includes(event.target.value.toLowerCase())) {\n        _option.addClass(\"multi-select__option--hidden\");\n\n        return;\n      }\n\n      _option.removeClass(\"multi-select__option--hidden\");\n    });\n\n    this._firstActive();\n  } // return visible options\n\n\n  _visibleOptions() {\n    return this._optionsDiv.get().querySelectorAll('div.multi-select__option:not(.multi-select__option--hidden)');\n  } // return visible options + unselected options\n\n\n  _unselectedOptions() {\n    return this._optionsDiv.get().querySelectorAll('div.multi-select__option:not(.multi-select__option--selected):not(.multi-select__option--hidden)');\n  } // return selected options\n\n\n  _selectedOptions() {\n    return this._optionsDiv.get().querySelectorAll('.multi-select__option--selected');\n  } // Arrow up, down, enter and tab button functionality\n\n\n  _arrows(t) {\n    let x = this._visibleOptions();\n\n    if (t.keyCode == 40) {\n      // this.currentFocus++;\n      this._nextUnselected(x);\n\n      this._addActive(x);\n    } else if (t.keyCode == 38) {\n      // this.currentFocus--;\n      this._previousUnselected(x);\n\n      this._addActive(x);\n    } else if (t.keyCode == 13 || t.keyCode == 9) {\n      t.preventDefault();\n\n      if (this.currentFocus > -1) {\n        /*and simulate a click on the \"active\" item:*/\n        if (x) x[this.currentFocus].click();\n\n        this._removeActive(x);\n      }\n    }\n  } // Add active color on active item in dropdown\n\n\n  _addActive(x) {\n    /*a function to classify an item as \"active\":*/\n    if (!x) return false;\n    /*start by removing the \"active\" class on all items:*/\n\n    this._removeActive(x); // checks if list ends or starts and set current fouces accordingly\n\n\n    this._listEndingCheck(x);\n\n    x[this.currentFocus].classList.add(\"multi-select__option-active\");\n    x[this.currentFocus].scrollIntoView();\n  }\n  /*a function to remove the \"active\" class from all autocomplete items:*/\n\n\n  _removeActive(x) {\n    for (var i = 0; i < x.length; i++) {\n      x[i].classList.remove(\"multi-select__option-active\");\n    }\n  } // select the next unselected value from dropdown\n\n\n  _nextUnselected(x) {\n    this.currentFocus++;\n\n    while (x[this.currentFocus] && x[this.currentFocus].classList.contains('multi-select__option--selected')) {\n      this.currentFocus++;\n    }\n  } // get the previous unselected element from dropdown\n\n\n  _previousUnselected(x) {\n    this.currentFocus--;\n\n    while (x[this.currentFocus] && x[this.currentFocus].classList.contains('multi-select__option--selected')) {\n      this.currentFocus--;\n    }\n  } // check if list ends or the start of list\n\n\n  _listEndingCheck(x) {\n    if (this.currentFocus >= x.length) {\n      this.currentFocus = -1;\n\n      this._nextUnselected(x);\n    }\n\n    if (this.currentFocus < 0) {\n      this.currentFocus = x.length;\n\n      this._previousUnselected(x);\n    }\n  } // get the first active element from dropdown\n\n\n  _firstActive() {\n    this.currentFocus = -1;\n\n    this._removeActive(this._visibleOptions());\n\n    if (this._config.autocomplete) {\n      if (this._unselectedOptions().length > 0) {\n        this._nextUnselected(this._visibleOptions());\n\n        this._visibleOptions()[this.currentFocus].classList.add(\"multi-select__option-active\");\n      }\n    }\n  } // On opening of select close all other selects\n\n\n  _closeAllLists() {\n    let elements = document.getElementsByClassName('multi-select__select');\n\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i] !== this._select.get()) {\n        if (elements[i].classList.contains('multi-select__select--opened')) {\n          elements[i].classList.remove('multi-select__select--opened');\n        }\n      }\n    }\n  }\n\n}\n\nexport default MultiSelect2;","map":{"version":3,"sources":["/home/dennis/Documents/MPS_src/mps_v1/node_modules/multi-select2/multi-select2.js"],"names":["Element","MultiSelect2","constructor","element","config","_config","_state","opened","_icons","currentFocus","_boundHandleClick","_handleClick","bind","_boundUnselectOption","_unselectOption","_boundSortOptions","_sortOptions","_boundArrows","_arrows","_body","document","body","_create","_setValue","_element","querySelector","_parent","_select","class","_selected_value","_optionsDiv","append","get","_options","_generateOptionsOfSelect","addEventListener","multiple","addClass","autocomplete","_autocomplete","type","options","map","_option","option","value","textContent","label","disabled","info","action","event","_firstActive","stopPropagation","_closeAllLists","target","className","find","getAttribute","removeClass","removeEventListener","parentElement","classList","icon","tagName","focus","manual","unselected","concat","forEach","_value","optionNode","toString","_selectOptions","length","_selectOption","_selectedOption","setText","onChange","selectedLabel","setTop","Number","getHeight","split","newValue","index","indexOf","splice","toLowerCase","includes","_visibleOptions","querySelectorAll","_unselectedOptions","_selectedOptions","t","x","keyCode","_nextUnselected","_addActive","_previousUnselected","preventDefault","click","_removeActive","_listEndingCheck","add","scrollIntoView","i","remove","contains","elements","getElementsByClassName"],"mappings":"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","sourcesContent":["import Element from \"./Element\";\n\nclass MultiSelect2 {\n  constructor(element, config) {\n    this._config = {...config};\n    this._state = {\n      opened: false,\n    };\n    this._icons = [];\n    this.currentFocus = -1\n\n    this._boundHandleClick = this._handleClick.bind(this);\n    this._boundUnselectOption = this._unselectOption.bind(this);\n    this._boundSortOptions = this._sortOptions.bind(this);\n    this._boundArrows = this._arrows.bind(this);\n    this._body = new Element(document.body);\n\n    this._create(element);\n    this._setValue();\n  }\n\n  _create(_element) {\n    const element = typeof _element === \"string\" ? document.querySelector(_element) : _element;\n\n    this._parent = new Element(element);\n    this._select = new Element(\"div\", {class: \"multi-select__select\"});\n    this._selected_value = new Element(\"span\", {class: \"multi-select__label\"});\n    this._optionsDiv = new Element(\"div\", {class: \"multi-select__options\"});\n\n    this._select.append(this._selected_value.get());\n    this._select.append(this._optionsDiv.get());\n    this._parent.append(this._select.get());\n\n    this._options = this._generateOptionsOfSelect();\n    this._select.addEventListener(\"click\", this._boundHandleClick);\n\n    if (this._config.multiple) {\n      this._select.addClass(\"multi-select__select--multiple\");\n    }\n  }\n\n  _generateOptionsOfSelect() {\n    if (this._config.autocomplete) {\n      this._autocomplete = new Element(\"input\", {class: \"multi-select__autocomplete\", type: \"text\"});\n      // Add Listeners to input field of autocomplete\n      this._autocomplete.addEventListener(\"input\", this._boundSortOptions);\n      this._autocomplete.addEventListener(\"keydown\", this._boundArrows);\n\n      this._optionsDiv.append(this._autocomplete.get());\n    }\n\n    return this._config.options.map(_option => {\n      const option = new Element(\"div\", {\n        class: \"multi-select__option\",\n        value: _option.value,\n        textContent: _option.label,\n        disabled: _option.disabled,\n        info: _option.info,\n        action: _option.action\n      });\n\n      this._optionsDiv.append(option.get());\n\n      return option;\n    });\n  }\n\n  _handleClick(event) {\n    // reset dropdown\n    this._firstActive();\n    event.stopPropagation();\n    this._closeAllLists();\n\n    if (event.target.className === \"multi-select__autocomplete\") {\n      return;\n    }\n\n    if (this._state.opened) {\n      const option = this._options.find(_option => _option.get() === event.target);\n\n      if (option) {\n        this._setValue(option.get().getAttribute(\"data-value\"), true);\n      }\n\n      this._select.removeClass(\"multi-select__select--opened\");\n      this._body.removeEventListener(\"click\", this._boundHandleClick);\n      this._select.addEventListener(\"click\", this._boundHandleClick);\n\n      this._state.opened = false;\n      return;\n    }\n\n    //Check for fontawsome icon, incase of pro fontawsome it will check svg otherwise it will check i tag or class like fa fas-something\n    if ('fa ' + event.target.parentElement.classList[1] === this._config.icon) {\n      this._unselectOption(event.target.parentElement.getAttribute('data-value'));\n      return;\n    }else if (event.target.tagName === 'I') {\n      this._unselectOption(event.target.getAttribute('data-value'));\n      return;\n    }else if (event.target.tagName === 'svg') {\n      this._unselectOption(event.target.getAttribute('data-value'));\n      return;\n    }\n\n    this._select.addClass(\"multi-select__select--opened\");\n    this._body.addEventListener(\"click\", this._boundHandleClick);\n    this._select.removeEventListener(\"click\", this._boundHandleClick);\n\n    this._state.opened = true;\n\n    if (this._autocomplete) {\n      this._autocomplete.focus();\n    }\n  }\n\n  _setValue(value, manual, unselected) {\n    if (value && !unselected) {\n      this._config.value = this._config.multiple ? this._config.value.concat(value) : value;\n    }\n    if (value && unselected) {\n      this._config.value = value;\n    }\n\n    this._options.forEach(_option => {\n      _option.removeClass(\"multi-select__option--selected\");\n    });\n\n    if (this._config.multiple) {\n      const options = this._config.value.map(_value => {\n        const option = this._config.options.find(_option => _option.value === _value);\n        const optionNode = this._options.find(\n          _option => _option.get().getAttribute(\"data-value\") === option.value.toString()\n        );\n\n        optionNode.addClass(\"multi-select__option--selected\");\n\n        return option;\n      });\n\n      this._selectOptions(options, manual);\n\n      return;\n    }\n\n    if (!this._config.options.length) {\n      return;\n    }\n\n    const option = this._config.value ?\n      this._config.options.find(_option => _option.value.toString() === this._config.value) : '';\n\n    if (option !== '') {\n      const optionNode = this._options.find(\n        _option => _option.get().getAttribute(\"data-value\") === option.value.toString()\n      );\n\n      optionNode.addClass(\"multi-select__option--selected\");\n      this._selectOption(option, manual);\n    }\n  }\n\n  _selectOption(option, manual) {\n    this._selectedOption = option;\n\n    this._selected_value.setText(option.label);\n\n    if (this._config.onChange && manual) {\n      this._config.onChange(option.value);\n    }\n  }\n\n  _selectOptions(options, manual) {\n    this._selected_value.setText(\"\");\n\n    this._icons = options.map(_option => {\n      const selectedLabel = new Element(\"span\", {\n        class: \"multi-select__selected-label\",\n        textContent: _option.label,\n      });\n      const icon = new Element(\"i\", {\n        class: this._config.icon,\n        value: _option.value,\n      });\n\n      selectedLabel.append(icon.get());\n      this._selected_value.append(selectedLabel.get());\n\n      return icon.get();\n    });\n\n    if (manual) {\n      // eslint-disable-next-line no-magic-numbers\n      this._optionsDiv.setTop(Number(this._select.getHeight().split(\"px\")[0]) + 5);\n    }\n\n    if (this._config.onChange && manual) {\n      this._config.onChange(this._config.value);\n    }\n  }\n\n  _unselectOption(event) {\n    const newValue = [...this._config.value];\n    let index;\n    if (!event.target) {\n      index = newValue.indexOf(event);\n    } else {\n      index = newValue.indexOf(event.target.getAttribute(\"data-value\"));\n    }\n\n    // eslint-disable-next-line no-magic-numbers\n    if (index !== -1) {\n      newValue.splice(index, 1);\n    }\n\n    this._setValue(newValue, true, true);\n  }\n\n  _sortOptions(event) {\n    this._options.forEach(_option => {\n      if (!_option.get().textContent.toLowerCase().includes(event.target.value.toLowerCase())) {\n        _option.addClass(\"multi-select__option--hidden\");\n        return;\n      }\n      _option.removeClass(\"multi-select__option--hidden\");\n    });\n    this._firstActive();\n  }\n\n  // return visible options\n  _visibleOptions() {\n    return this._optionsDiv.get().querySelectorAll('div.multi-select__option:not(.multi-select__option--hidden)');\n  }\n\n  // return visible options + unselected options\n  _unselectedOptions() {\n    return this._optionsDiv.get().querySelectorAll('div.multi-select__option:not(.multi-select__option--selected):not(.multi-select__option--hidden)');\n  }\n\n  // return selected options\n  _selectedOptions() {\n    return this._optionsDiv.get().querySelectorAll('.multi-select__option--selected');\n  }\n\n  // Arrow up, down, enter and tab button functionality\n  _arrows(t) {\n    let x = this._visibleOptions();\n    if (t.keyCode == 40) {\n      // this.currentFocus++;\n      this._nextUnselected(x);\n      this._addActive(x);\n    } else if (t.keyCode == 38) {\n      // this.currentFocus--;\n      this._previousUnselected(x);\n      this._addActive(x);\n    } else if (t.keyCode == 13 || t.keyCode == 9) {\n      t.preventDefault();\n      if (this.currentFocus > -1) {\n        /*and simulate a click on the \"active\" item:*/\n        if (x) x[this.currentFocus].click();\n        this._removeActive(x);\n      }\n    }\n  }\n\n  // Add active color on active item in dropdown\n  _addActive(x) {\n    /*a function to classify an item as \"active\":*/\n    if (!x) return false;\n    /*start by removing the \"active\" class on all items:*/\n    this._removeActive(x);\n    // checks if list ends or starts and set current fouces accordingly\n    this._listEndingCheck(x);\n\n    x[this.currentFocus].classList.add(\"multi-select__option-active\");\n    x[this.currentFocus].scrollIntoView();\n  }\n\n  /*a function to remove the \"active\" class from all autocomplete items:*/\n  _removeActive(x) {\n    for (var i = 0; i < x.length; i++) {\n      x[i].classList.remove(\"multi-select__option-active\");\n    }\n  }\n\n  // select the next unselected value from dropdown\n  _nextUnselected(x) {\n    this.currentFocus++;\n    while (x[this.currentFocus] && x[this.currentFocus].classList.contains('multi-select__option--selected')) {\n      this.currentFocus++;\n    }\n  }\n\n  // get the previous unselected element from dropdown\n  _previousUnselected(x) {\n    this.currentFocus--;\n    while (x[this.currentFocus] && x[this.currentFocus].classList.contains('multi-select__option--selected')) {\n      this.currentFocus--;\n    }\n  }\n\n  // check if list ends or the start of list\n  _listEndingCheck(x) {\n    if (this.currentFocus >= x.length) {\n      this.currentFocus = -1;\n      this._nextUnselected(x);\n    }\n\n    if (this.currentFocus < 0) {\n      this.currentFocus = (x.length);\n      this._previousUnselected(x);\n    }\n  }\n\n  // get the first active element from dropdown\n  _firstActive() {\n    this.currentFocus = -1;\n    this._removeActive(this._visibleOptions());\n    if (this._config.autocomplete) {\n      if (this._unselectedOptions().length > 0) {\n        this._nextUnselected(this._visibleOptions());\n        this._visibleOptions()[this.currentFocus].classList.add(\"multi-select__option-active\");\n      }\n    }\n  }\n\n  // On opening of select close all other selects\n  _closeAllLists() {\n    let elements = document.getElementsByClassName('multi-select__select');\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i] !== this._select.get()) {\n        if (elements[i].classList.contains('multi-select__select--opened')) {\n          elements[i].classList.remove('multi-select__select--opened');\n        }\n      }\n    }\n  }\n}\n\nexport default MultiSelect2;\n"]},"metadata":{},"sourceType":"module"}
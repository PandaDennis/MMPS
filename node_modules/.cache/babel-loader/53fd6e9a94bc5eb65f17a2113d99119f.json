{"ast":null,"code":"const allowedAttributes = {\n  value: \"data-value\",\n  disabled: \"data-disabled\",\n  class: \"class\",\n  type: \"type\",\n  info: \"data-info\",\n  action: \"data-action\"\n};\n\nclass Element {\n  constructor(element, attributes = {}, i18n = {}) {\n    this._node = element instanceof HTMLElement ? element : document.createElement(element);\n    this._config = {\n      i18n\n    };\n\n    this._setAttributes(attributes);\n\n    if (attributes.textContent) {\n      this._setTextContent(attributes.textContent);\n    }\n\n    return this;\n  }\n\n  get() {\n    return this._node;\n  }\n\n  append(element) {\n    this._node.appendChild(element);\n\n    return this;\n  }\n\n  addClass(className) {\n    this._node.classList.add(className);\n\n    return this;\n  }\n\n  removeClass(className) {\n    this._node.classList.remove(className);\n\n    return this;\n  }\n\n  toggleClass(className) {\n    this._node.classList.toggle(className);\n\n    return this;\n  }\n\n  addEventListener(type, callback) {\n    this._node.addEventListener(type, callback);\n\n    return this;\n  }\n\n  removeEventListener(type, callback) {\n    this._node.removeEventListener(type, callback);\n\n    return this;\n  }\n\n  setText(text) {\n    this._setTextContent(text);\n\n    return this;\n  }\n\n  getHeight() {\n    return window.getComputedStyle(this._node).height;\n  }\n\n  setTop(top) {\n    this._node.style.top = `${top}px`;\n    return this;\n  }\n\n  focus() {\n    this._node.focus();\n\n    return this;\n  }\n\n  _setTextContent(textContent) {\n    this._node.textContent = textContent;\n  }\n\n  _setAttributes(attributes) {\n    for (const key in attributes) {\n      if (allowedAttributes[key] && attributes[key]) {\n        this._setAttribute(allowedAttributes[key], attributes[key]);\n      }\n    }\n  }\n\n  _setAttribute(key, value) {\n    this._node.setAttribute(key, value);\n  }\n\n}\n\nexport default Element;","map":{"version":3,"sources":["/home/dennis/Documents/MPS_src/mps_v1/node_modules/multi-select2/Element.js"],"names":["allowedAttributes","value","disabled","class","type","info","action","Element","constructor","element","attributes","i18n","_node","HTMLElement","document","createElement","_config","_setAttributes","textContent","_setTextContent","get","append","appendChild","addClass","className","classList","add","removeClass","remove","toggleClass","toggle","addEventListener","callback","removeEventListener","setText","text","getHeight","window","getComputedStyle","height","setTop","top","style","focus","key","_setAttribute","setAttribute"],"mappings":"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","sourcesContent":["const allowedAttributes = {\n  value: \"data-value\",\n  disabled: \"data-disabled\",\n  class: \"class\",\n  type: \"type\",\n  info: \"data-info\",\n  action: \"data-action\"\n};\n\nclass Element {\n  constructor(element, attributes = {}, i18n = {}) {\n    this._node = element instanceof HTMLElement ? element : document.createElement(element);\n    this._config = { i18n };\n\n    this._setAttributes(attributes);\n\n    if (attributes.textContent) {\n      this._setTextContent(attributes.textContent);\n    }\n\n    return this;\n  }\n\n  get() {\n    return this._node;\n  }\n\n  append(element) {\n    this._node.appendChild(element);\n    return this;\n  }\n\n  addClass(className) {\n    this._node.classList.add(className);\n    return this;\n  }\n\n  removeClass(className) {\n    this._node.classList.remove(className);\n    return this;\n  }\n\n  toggleClass(className) {\n    this._node.classList.toggle(className);\n    return this;\n  }\n\n  addEventListener(type, callback) {\n    this._node.addEventListener(type, callback);\n    return this;\n  }\n\n  removeEventListener(type, callback) {\n    this._node.removeEventListener(type, callback);\n    return this;\n  }\n\n  setText(text) {\n    this._setTextContent(text);\n    return this;\n  }\n\n  getHeight() {\n    return window.getComputedStyle(this._node).height;\n  }\n\n  setTop(top) {\n    this._node.style.top = `${top}px`;\n    return this;\n  }\n\n  focus() {\n    this._node.focus();\n    return this;\n  }\n\n  _setTextContent(textContent) {\n    this._node.textContent = textContent;\n  }\n\n  _setAttributes(attributes) {\n    for (const key in attributes) {\n      if (allowedAttributes[key] && attributes[key]) {\n        this._setAttribute(allowedAttributes[key], attributes[key]);\n      }\n    }\n  }\n\n  _setAttribute(key, value) {\n    this._node.setAttribute(key, value);\n  }\n}\n\nexport default Element;\n"]},"metadata":{},"sourceType":"module"}